[{"C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\index.js":"1","C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\reportWebVitals.js":"2","C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\App.js":"3","C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\component\\Generator.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":213,"mtime":1610899863984,"results":"8","hashOfConfig":"6"},{"size":2063,"mtime":1610909500031,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"f175xk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\index.js",[],["20","21"],"C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\reportWebVitals.js",[],"C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\App.js",[],"C:\\Users\\sammy\\Documents\\repo-clone\\stress-react\\stress-react\\src\\component\\Generator.js",["22"],"import React, { Component } from 'react';\r\nimport templateData from '../Templates.json';\r\n\r\nexport default class Templates extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            name: \"keqing\",\r\n            nameCaps: \"KEQING\",\r\n            rawCopypasta: '',\r\n            currentTemplate: '',\r\n            copypasta: `Pilih template [Choose a template]`\r\n        }\r\n    }\r\n    handleNameChange = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n            nameCaps: e.target.value.toUpperCase()\r\n        }, () => {\r\n            this.changeCopypasta(this.state.rawCopypasta);})\r\n    }\r\n\r\n    forceUpdateHandler() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeCopypasta(copypastaContent) {\r\n        this.setState({\r\n            rawCopypasta: copypastaContent,\r\n            copypasta: eval('`' + copypastaContent + '`')\r\n        })\r\n    }\r\n\r\n    changeCurrentTemplate(name) {\r\n        this.setState({\r\n            currentTemplate: name\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <div className=\"container\">\r\n                    <span className=\"title\">Name</span>\r\n                    <input type=\"text\" value={this.state.name} onChange={this.handleNameChange}></input>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <span className=\"title\">Template</span>\r\n                    <div className=\"button-container\">\r\n                        {templateData.map((templates) => {\r\n                            return <button className={this.state.currentTemplate === templates.templateName ? \"current-active\" : ''} onClick={() => {this.changeCopypasta(templates.copypasta); this.changeCurrentTemplate(templates.templateName)}}>{templates.templateName}</button>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <p className=\"output\">{this.state.name === '' ? \"input name\" : this.state.copypasta}</p>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":31,"column":24,"nodeType":"29","messageId":"30","endLine":31,"endColumn":28},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]